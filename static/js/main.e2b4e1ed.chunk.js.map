{"version":3,"sources":["actions/actions.js","reducers/reducers.js","componets/FlashCardsPage/Card.js","componets/FlashCardsPage/NextArrow.js","componets/FlashCardsPage/ToggleModeButton.js","componets/FlashCardsPage/FlashCardsPage.js","componets/LearnPage/PeopleTable.js","componets/LearnPage/LearnPage.js","componets/App/Nav.js","componets/App/App.js","index.js"],"names":["CHANGE_CARD_PERSON","CHANGE_CARD_SIDE","TOGGLE_QUIZ_MODE","changeCardPerson","person","type","changeCardSide","isFlipped","flipSpeed","initialState","name","description","isNameShownFirst","nameOrientation","descriptionOrientation","reducer","state","action","cardStyle","width","height","verticalAlign","padding","nameCardStyle","border","descriptionCardStyle","cardTextStyle","textAlign","Card","this","props","flipDirection","flipSpeedBackToFront","flipSpeedFrontToBack","key","style","onClick","handleFlip","React","Component","arrowStyle","margin","NextArrow","Button","variant","color","changeCard","toggleModeSytle","ToggleModeButton","toggleMode","pageStyle","minHeight","display","flexDirection","alignItems","justifyContent","flexRowStyle","flexColumnStyle","FlashCardsPage","event","dispatch","getRandomPerson","min","Math","ceil","max","floor","peopleData","length","randomIndex","random","connect","useStyles","makeStyles","theme","root","marginTop","spacing","overflowX","backgroundColor","tableCell","tableHeader","fontSize","rows","PeopleTable","classes","Paper","className","Table","table","TableHead","TableRow","tableRow","TableCell","TableBody","map","row","component","scope","LearnPage","buttonGroupStyle","buttonStyle","Nav","Link","to","appStyle","store","createStore","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2b4e1ed.chunk.js","sourcesContent":["export const CHANGE_CARD_PERSON = 'CHANGE_CARD_PERSON';\nexport const CHANGE_CARD_SIDE = 'CHANGE_CARD_SIDE';\nexport const TOGGLE_QUIZ_MODE = 'TOGGLE_QUIZ_MODE';\n\nexport function changeCardPerson(person) {\n    return {\n        type: CHANGE_CARD_PERSON,\n        person\n    }\n}\n\nexport function changeCardSide(isFlipped, flipSpeed) {\n    return {\n        type: CHANGE_CARD_SIDE,\n        isFlipped,\n        flipSpeed\n    }\n}\n\nexport function toggleQuizMode(isNameShownFirst) {\n    return {\n        type: TOGGLE_QUIZ_MODE,\n        isNameShownFirst\n    }\n}","import {CHANGE_CARD_PERSON,CHANGE_CARD_SIDE, TOGGLE_QUIZ_MODE} from '../actions/actions';\nconst initialState = {\n    person: {\n        name: '',\n        description: '',\n    },\n    isFlipped: false,\n    flipSpeed: .6,\n    isNameShownFirst: false,\n    nameOrientation: \"front\",\n    descriptionOrientation: \"back\",\n}\n\nfunction reducer(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_CARD_PERSON:\n            return {\n                ...state,\n                person: action.person\n            }\n        case CHANGE_CARD_SIDE:\n            return {\n                ...state,\n                isFlipped: action.isFlipped,\n                flipSpeed: action.flipSpeed\n            }\n        case TOGGLE_QUIZ_MODE:\n            return {\n                ...state,\n                isNameShownFirst: action.isNameShownFirst,\n                nameOrientation: state.descriptionOrientation,\n                descriptionOrientation: state.nameOrientation\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react'\nimport ReactCardFlip from 'react-card-flip'\n\nconst cardStyle = {\n  width: '50vw',\n  height: '25vh',\n  verticalAlign: 'middle',\n  padding: '5px'\n}\n\nconst nameCardStyle = {\n  ...cardStyle,\n  border: '2px blue solid'\n}\n\nconst descriptionCardStyle = {\n  ...cardStyle,\n  border: '2px green solid'\n}\n\nconst cardTextStyle = {\n  height: '25vh',\n  textAlign: 'center',\n  verticalAlign: 'middle'\n}\n\nclass Card extends React.Component {\n  render() {\n    return (\n      <ReactCardFlip\n        isFlipped={this.props.isFlipped}\n        flipDirection=\"vertical\"\n        flipSpeedBackToFront={this.props.flipSpeed}\n        flipSpeedFrontToBack={this.props.flipSpeed}\n      >\n        <div\n          key={this.props.nameOrientation}\n          style={nameCardStyle}\n          onClick={this.props.handleFlip}\n        >\n          <p style={cardTextStyle}>{this.props.person.description}</p>\n        </div>\n\n        <div\n          key={this.props.descriptionOrientation}\n          style={descriptionCardStyle}\n          onClick={this.props.handleFlip}\n        >\n          <p style={cardTextStyle}>{this.props.person.name}</p>\n        </div>\n      </ReactCardFlip>\n    )\n  }\n}\n\nexport default Card\n","import React from 'react';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\n\nconst arrowStyle = {\n    margin: \"0 0 0 20px\"\n}\n\nclass NextArrow extends React.Component {\n\n    render() {\n        return (\n            <Button variant=\"outlined\" color=\"secondary\" style={arrowStyle} onClick={this.props.changeCard}>\n                <ArrowForwardIosIcon></ArrowForwardIosIcon>\n            </Button>\n        )\n    }\n}\n\nexport default NextArrow;","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nconst toggleModeSytle = {\n    margin: '40px 0 0 0',\n}\n\nclass ToggleModeButton extends React.Component {\n\n    render() {\n        return(\n            <Button \n                style={toggleModeSytle} \n                variant=\"outlined\" \n                color=\"secondary\"\n                onClick={this.props.toggleMode}\n            >\n                Switch to {this.props.isNameShownFirst ? \"Description\" : \"Name\"} First\n            </Button>\n        )\n\n    }\n}\n\nexport default ToggleModeButton;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  changeCardPerson,\n  changeCardSide,\n  toggleQuizMode\n} from \"../../actions/actions\";\nimport Card from \"./Card\";\nimport NextArrow from \"./NextArrow\";\nimport ToggleModeButton from \"./ToggleModeButton\";\nimport peopleData from \"../../data/people_data\";\n\nconst pageStyle = {\n  textAlign: \"center\",\n  minHeight: \"100vh\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\"\n};\n\nconst flexRowStyle = {\n  display: \"flex\",\n  flexDirection: \"row\"\n};\n\nconst flexColumnStyle = {\n  display: \"flex\",\n  flexDirection: \"column\"\n};\n\nclass FlashCardsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const person = this.getRandomPerson();\n    this.props.dispatch(changeCardPerson(person));\n  }\n\n  changeCard = event => {\n    const fastFlipSpeed = 0.000001;\n    this.props.dispatch(changeCardSide(false, fastFlipSpeed));\n    this.props.dispatch(changeCardPerson(this.getRandomPerson()));\n  };\n\n  handleFlip = event => {\n    const normalFlipSpeed = 0.6;\n    this.props.dispatch(changeCardSide(!this.props.isFlipped, normalFlipSpeed));\n  };\n\n  getRandomPerson() {\n    const min = Math.ceil(0);\n    const max = Math.floor(peopleData.length);\n    const randomIndex = Math.floor(Math.random() * (max - min)) + min;\n    return peopleData[randomIndex];\n  }\n\n  toggleMode = event => {\n    this.props.dispatch(toggleQuizMode(!this.props.isNameShownFirst));\n    this.changeCard();\n  };\n\n  render() {\n    return (\n      <div style={pageStyle}>\n        <div style={flexRowStyle}>\n          <Card\n            person={this.props.person}\n            isFlipped={this.props.isFlipped}\n            flipSpeed={this.props.flipSpeed}\n            handleFlip={this.handleFlip}\n            nameOrientation={this.props.nameOrientation}\n            descriptionOrientation={this.props.descriptionOrientation}\n          ></Card>\n          <NextArrow changeCard={this.changeCard}></NextArrow>\n        </div>\n        <div style={flexColumnStyle}>\n          <ToggleModeButton\n            isNameShownFirst={this.props.isNameShownFirst}\n            toggleMode={this.toggleMode}\n          ></ToggleModeButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    person: state.person,\n    isFlipped: state.isFlipped,\n    flipSpeed: state.flipSpeed,\n    isNameShownFirst: state.isNameShownFirst,\n    nameOrientation: state.nameOrientation,\n    descriptionOrientation: state.descriptionOrientation\n  };\n}\n\nexport default connect(mapStateToProps)(FlashCardsPage);\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport peopleData from '../../data/people_data'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n    backgroundColor: 'inherit'\n  },\n  tableCell: {\n    color: 'white'\n  },\n  tableHeader: {\n    fontSize: '30px',\n    color: 'white'\n  }\n}))\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein }\n}\n\nconst rows = peopleData\n\nfunction PeopleTable() {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow className={classes.tableRow}>\n            <TableCell className={classes.tableHeader}>Person</TableCell>\n            <TableCell className={classes.tableHeader}>Description</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell\n                className={classes.tableCell}\n                component=\"th\"\n                scope=\"row\"\n              >\n                {row.name}\n              </TableCell>\n              <TableCell className={classes.tableCell}>\n                {row.description}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n\nexport default PeopleTable\n","import React from 'react'\nimport PeopleTable from './PeopleTable'\n\nclass LearnPage extends React.Component {\n  render() {\n    return <PeopleTable />\n  }\n}\n\nexport default LearnPage\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nconst buttonGroupStyle = {\n  margin: \"10px\"\n};\n\nconst buttonStyle = {\n  margin: \"5px\",\n  padding: \"5px 20px\",\n  width: \"100px\"\n};\n\nclass Nav extends React.Component {\n  render() {\n    return (\n      <div style={buttonGroupStyle}>\n        <Button\n          component={Link}\n          to=\"/book-of-mormon-people/learn\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          style={buttonStyle}\n        >\n          Learn\n        </Button>\n        <Button\n          component={Link}\n          to=\"/book-of-mormon-people/quiz\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          style={buttonStyle}\n        >\n          Quiz\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport reducer from \"../../reducers/reducers\";\nimport FlashCardsPage from \"../FlashCardsPage/FlashCardsPage\";\nimport LearnPage from \"../LearnPage/LearnPage\";\nimport Nav from \"./Nav\";\n\nconst appStyle = {\n  backgroundColor: \"#282c34\",\n  minHeight: \"100vh\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  fontSize: \"calc(10px + 2vmin)\",\n  color: \"white\"\n};\n\nconst store = createStore(reducer);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\" style={appStyle}>\n          <Nav />\n          <Switch key={Math.random()}>\n            <Route\n              path=\"/book-of-mormon-people/learn\"\n              component={LearnPage}\n            ></Route>\n            <Route\n              path=\"/book-of-mormon-people/quiz\"\n              component={FlashCardsPage}\n            ></Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './componets/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}